## Create CSR [POST /api/ssl/createcsr]

Creating SSL CSR and Key file.
Regular user must add domain to WebDomains to own this domain name.

+ Attributes
    + Domains (required,string) - Domains name for certificate.
    + City (required,string) - City name for CSR.
    + State (required,string) - State of the city.
    + Country (required,string) - Two symbols country code.
    + Company (required,string) - Company full name.
    + Division (required,string) - Division of the company.
    + Email (required,string) - Contact email.
    + Passphrase (required,string) - Password for private key. Leave empty for correct apache using.


+ Request (application/json)
        {  
           "Domains":"test.com",
           "City":"NewYork",
           "State":"NY",
           "Country":"UA",
           "Company":"Geeks inc.",
           "Division":"IT",
           "Email":"test@domain.com",
           "Passphrase":"qwerty"
        }

+ Response 200 (application/json)
        {
        "Key":"Private key",
        "CSR":"Certificate request"
        }

## Generate self sighned certificate [POST /api/ssl/generate]

Generating self-signed certificate on CSR and KEY which already ben generated or imported.

+ Request (application/json)
        {  
           "Domain":"test.com"
        }

+ Response 200 (application/json)
        {
        "Crt":"certificate"
        }

## Error generating certificate [POST /api/ssl/generate]

If no KEY or (and) CSR are exists for domain, there will be an error.

+ Request (application/json)
        {  
           "Domain":"testNotExistent.com"
        }


+ Response 500 (application/json)
    + Attributes (Error)

## List all certificates [GET /api/ssl/list]

List SSL information for user's domains.

+ Response 200 (application/json)
        [  
           {  
              "Name":"test.com",
              "Key":true,
              "CSR":true,
              "CRT":false
           }
        ]

## Getting all certificate info [POST /api/ssl/getcert]

Getting all information about certificate, keys and etc.

+ Request (application/json)
        {  
           "Domain":"test.com"
        }

+ Response 200 (application/json)
        {  
           "PrivateKey":"...",
           "CSRKey":"...",
           "CRTKey":"...",
           "IssueDate":"2009-09-01 13:32:12",
           "ExpireDate":"2009-09-01 13:32:12",
           "CRTInfo":{  
              "Domains":"domain.com",
              "City":"Kiev",
              "State":"Kiev"
           }
        }

## Removing certificate [POST /api/ssl/del]

While removing certificate from domain, `Webdomain` SSL will set to `FALSE`

+ Request (application/json)
        [
           "test.com"
        ]

+ Response 204 (text/plain)

## Import certificate [POST /api/ssl/import]

Import CSR, Key, CRT for domain.

+ Request (application/json)
        {  
           "Domain":"test.com",
           "Key":"-----BEGIN PRIVATE KEY-----MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDo+UyURQKUPMYvGf+ISHDR8QNwOwdoB0NMOhXbXFyK29XAFzoiAqNCXtwQLP+kxXeTKslGhJ9L25xPNT9bQOQCPYp2Bd7TOqGa5AUQS+/PyP57i7p9Q8HV75ruEk693j4DWnq4dZtnYP4M6RgcPtbLM09awvR0hoe3a+lzEgpJr++puCpEf7sZZQq2QHhoKY4bsvh2jvvQVSQEIxOLoIYENrKvCHznGixGpwULchdmKytn5pwFAa0YjzDSWczzqwRcGQTIiKEjtQwcQ8jLnuUGEZNzhtfVVUd7rHB8Seh4wlgi1m4X2DEpwbFXQREbJ9yonqKTJAVtGULhg753m2j9AgMBAAECggEBAI5uk832HuyH91Ymm94zA56mrcZ4oD+OaSt6O5Cf+AgA/L5ytNzEJhHWss3E5QpUm5VCzEkrncQf4IFgeXqNwphIDZW4YxFawCBVFW9wLY4oQMVBmOMqgKAN2/d/A9r6u4kLUQnjBP6AAvHbtBzYojMbDIHdvNxcvy55cAEk31tKZNvN8SBPOniHvcitU8LVMeZSC+9fq+5jNALed6G8P60CR85ixnvDfCRoR1CeY1IwKjty978a08jm41c2tolo4qY3eM63WBnZsX8Ip8t6DGnjucggNYToaDiOKq/McAIiOLFxbNF+j7GZQTniWVr76KM6smOn2pQfDxE+RojHHkECgYEA/562mfS+AZUQONFoA/tFvkwltp2OTCIT36/Sj01ruSHr/0U7K/Ms2QlRvaUWdliZZ3n/XZOEmQR4SkZ5pr7s8iSJg8KJHbGumwTe5RYbuiwe8Rz1Winuvb9n7neEaPSbRMofENJFUURCJekrcqyxQP2q5vtoan/3tUAx7e/UF5ECgYEA6VH3iHA2TH90ds4wOMYam6u4j+9a3obRwH+ePTslg7ZJ+uLX8ufDFGhtHoCqIN+leuOqlszqcDhjnyh6GDZyGh60llso+y36/w6TbiOC82sPhbIlbLFCjx8wzT8XmhEFvMEpTzWeAotsFyGRpXoNQ4UoQVgRfRajZTWjeKHpvK0CgYA+3NRBNlwH3ZW4s17mI8Q6EVXw+/xDotnKV93rWfnU9I+qHmd33ny3/z+36MKGZjGLrgfsBlxEmUHP2lcOd8OjpPKgkZXQ1KKBAwihw/cbqMAPQbTg8JEC3vB7R68rdIQ+vYo4Q83CN4wg8J+7utZ4iimeVlOOZVwQmfHtdt5s0QKBgQCvlBU4wWi7LHbSKNu0/a9sUk9zUWYKa15RBDhqT6YtdfI6MJbdnnb5VpQ3Dg/46RQ4ZDctgEsz49tkHCu1KNO4wD6Zn0Q5sSJe6fMcQPD8iSaHL8ZmAwbZeVlaOw5hzEmK/7k8eFbOB2lyBrr50d1FYGEou0N95JlVQoYf84hXiQKBgHgGogCVQl7iSAX1VoSOTl/rzAg+wi4gW7Eb1oHjpj/OR9uWfET3JRCmNLfDruV9Nc3iu5/2F0L63yTrBT+XYKvLPi33pE9juPBw6mWVFe0fv4HgEtrCW7ZJV+bWwEWZand8xrqxYiagQFjvSuSXBoncfkSs/YJS65Jc10N9f32O-----END PRIVATE KEY-----",
           "Crt":"-----BEGIN CERTIFICATE-----MIID0zCCArugAwIBAgIBADANBgkqhkiG9w0BAQsFADCBgzELMAkGA1UEBhMCVUExEDAOBgNVBAgMB0toYXJrb3YxEDAOBgNVBAcMB0toYXJrb3YxEjAQBgNVBAoMCUdlZWtzdGVhbTELMAkGA1UECwwCSVQxETAPBgNVBAMMCHRlc3QuY29tMRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMB4XDTE2MDMyNDA5MDczM1oXDTE3MDMyNDA5MDczM1owgYMxCzAJBgNVBAYTAlVBMRAwDgYDVQQIDAdLaGFya292MRAwDgYDVQQHDAdLaGFya292MRIwEAYDVQQKDAlHZWVrc3RlYW0xCzAJBgNVBAsMAklUMREwDwYDVQQDDAh0ZXN0LmNvbTEcMBoGCSqGSIb3DQEJARYNdGVzdEB0ZXN0LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOj5TJRFApQ8xi8Z/4hIcNHxA3A7B2gHQ0w6FdtcXIrb1cAXOiICo0Je3BAs/6TFd5MqyUaEn0vbnE81P1tA5AI9inYF3tM6oZrkBRBL78/I/nuLun1DwdXvmu4STr3ePgNaerh1m2dg/gzpGBw+1sszT1rC9HSGh7dr6XMSCkmv76m4KkR/uxllCrZAeGgpjhuy+HaO+9BVJAQjE4ughgQ2sq8IfOcaLEanBQtyF2YrK2fmnAUBrRiPMNJZzPOrBFwZBMiIoSO1DBxDyMue5QYRk3OG19VVR3uscHxJ6HjCWCLWbhfYMSnBsVdBERsn3KieopMkBW0ZQuGDvnebaP0CAwEAAaNQME4wHQYDVR0OBBYEFEkE8dr8y/aDEEjNJkwtalK1DkNRMB8GA1UdIwQYMBaAFEkE8dr8y/aDEEjNJkwtalK1DkNRMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAK3aFK/jdULddAbFb79/BnrKwBO+DmJljOGMUZZWGer/r5IX91MLk8yprvQva0ebafh7DzNDlQWCHps2sfsJ83Su7gywrFL8tmTmShcEQpX9xJToHsYasw0to8Gh2hN2HBL6588iyYt0bJW9PMDEvu6P/MJs77zWuh50z9xO+7mXuc4bk3F2A5UisAxt+zvbZCEWCjoDhHTlUYFv0OLJ5/6HNhk7s5ZjKp43NXRtsntyoLJeCUzb3qxmKNIVw9a7ineMIN3Qykm2AUjzZL/tdccZ0YeqsbSdHOV03XodM9VIsSqj0AZQ3cxLvgv0s9xcniRqEhVs1qHYKjfrVhpjyBI=-----END CERTIFICATE-----",
           "Csr":"-----BEGIN CERTIFICATE REQUEST-----MIICqjCCAZICADBmMQswCQYDVQQGEwJVQTERMA8GA1UEAxMIdGVzdC5jb20xEDAOBgNVBAcTB0thaHJrb3YxEzARBgNVBAoTCkdlZWtzLlRlYW0xEDAOBgNVBAgTB0toYXJrb3YxCzAJBgNVBAsTAklUMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAox7xBJVm0k59RuLlRs+c7VSHsD4GH8xU8Dk+0HxhQ7CZsz2W8i1TM/T/4AfrWztDlOGBro3ey9JmtDANMfoGjHF82MqZwHKCJePPWEUDhH6jPKurtRlRaPKymxoKl4xB1mWeIJXu5VaAklfi4BqeavDnARWA03/wUE3/H9fUpK7k98LXEDJ/AgKALICG7++5llEXrnDkbW3ofNRpp/r1Z/ZxtNaxGn0Toplt/tLBZWSbkMYmqF6HQm6hND88xN+Ufex+kStWiOglytmYz2c2XhnsUx+xV8+1MUjkMc+Itg+6ncLg60qgXCOKyHleQ1lAKZaHkUhX/Q9mz+Q+PW7lkQIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBAE56UIb2alhJghxPUKuI6/B7QCE6W01zx2MJSbCk3+9eWUwFQFoFy3NQJWKn0wE0788PAKiQ1dZ0joIsTaWlX5xW79aDK/Od8McpCqNNDmuCJKHtd8SWnp3WnXjD9KPPM+CEYpFOgo8CYxRjMqckOGXbW/z9gs2Zuehwb2YK3horyf0MoaxtppYjDOo0G7yF79aTgaqKromKrOv1+Pr4/f86/QJCx+6T9Eht6sdONH2PQVH58V0a10Di2GtpRDys7oQFP4lBnTUBkRnnTnhJ7o7fEbNmFJnKutpe7XcfTmN40+4ybqCGfHiqBo4/GCLXGVpJitYV2ISjahY2u7us0+g=-----END CERTIFICATE REQUEST-----"
        }

+ Response 204 (text/plain)
